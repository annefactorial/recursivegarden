# Generated by Django 4.0.5 on 2022-07-17 19:49

import core.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoogleDocBridge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_doc_url', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MP4ImageViewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('small', models.FileField(upload_to='')),
                ('medium', models.FileField(upload_to='')),
                ('full', models.FileField(upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A universally unique identifier, allows referencing a card if no slug is provided.', unique=True)),
                ('slug', models.SlugField(blank=True, help_text='If specified, allow viewing this card at this url for the above specified site. A slug is a series of only lowercase letters, numbers, and dashes.', max_length=1023)),
                ('title', models.CharField(blank=True, help_text='A title for this card. If this card is used as the root card of a webpage, it will be used as the html page title.', max_length=1023)),
                ('description', models.TextField(help_text='A description of this card. If this card is used as the root card of a webpage, it will be used as the meta description text.', max_length=8191)),
                ('published', models.BooleanField(default=False, help_text='If true, this card will be publically viewable without required the viewer to be logged in. If false (default) this card will only be viewable by logged in users.')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='core.card')),
                ('site', models.ForeignKey(blank=True, help_text='The domain name which this card will be viewable on.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(blank=True, default='', max_length=254, unique=True)),
                ('name', models.CharField(blank=True, default='', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', core.models.CustomUserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='card',
            index=models.Index(fields=['content_type', 'object_id'], name='core_card_content_02a449_idx'),
        ),
    ]
